@using FlightManager.Data.Models
@model PaginatedList<FlightManager.Data.Models.AppUser>

@{
    ViewData["Title"] = "Users";
}

<h1>User Management</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-5">
                <label for="emailSearch" class="form-label">Search by Email</label>
                <input type="text" class="form-control" id="emailSearch" name="email"
                       value="@Context.Request.Query["email"]" placeholder="Enter email...">
            </div>
            <div class="col-md-5">
                <label for="roleSearch" class="form-label">Search by Role</label>
                <select class="form-select" id="roleSearch" name="role">
                    <option value="">All Roles</option>
                    @foreach (var role in ViewBag.AllRoles as List<string>)
                    {
                        <option value="@role" selected="@(Context.Request.Query["role"] == role)">@role</option>
                    }
                </select>
            </div>
            <input type="hidden" name="pageSize" value="@ViewBag.CurrentPageSize" />
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-search"></i> Search
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-undo"></i> Reset
                </a>
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-between mb-3">
    <div>
        @if (User.IsInRole("Owner"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Create New User
            </a>
        }
        <a asp-action="Roles" class="btn btn-info">
            <i class="fas fa-shield-alt"></i> Manage Roles
        </a>
    </div>
    <span class="text-muted">Total Users: @Model.TotalCount</span>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Roles Count</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@(string.IsNullOrEmpty(item.PhoneNumber) ? "Not provided" : item.PhoneNumber)</td>
                    <td>
                        @if (ViewBag.UserRoles != null && ViewBag.UserRoles.ContainsKey(item.Id))
                        {
                            @ViewBag.UserRoles[item.Id].Count
                        }
                        else
                        {
                            <span>0</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm" role="group">
                            @if (User.IsInRole("Owner"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination controls -->
<div class="row mt-3">
    <div class="col-md-6">
        <div class="d-flex align-items-center">
            <span class="me-2">Show:</span>
            <select class="form-select form-select-sm w-auto" id="pageSizeSelect">
                @foreach (var size in ViewBag.AvailablePageSizes)
                {
                    <option value="@size" selected="@(size == ViewBag.CurrentPageSize)">@size</option>
                }
            </select>
            <span class="ms-2">items per page</span>
        </div>
    </div>
    <div class="col-md-6">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-end">
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-pageSize="@ViewBag.CurrentPageSize"
                       asp-route-email="@Context.Request.Query["email"]"
                       asp-route-role="@Context.Request.Query["role"]">
                        Previous
                    </a>
                </li>

                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@i"
                           asp-route-pageSize="@ViewBag.CurrentPageSize"
                           asp-route-email="@Context.Request.Query["email"]"
                           asp-route-role="@Context.Request.Query["role"]">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-pageSize="@ViewBag.CurrentPageSize"
                       asp-route-email="@Context.Request.Query["email"]"
                       asp-route-role="@Context.Request.Query["role"]">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section StyleLinks {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
}

@section Styles {
    <style>
        .table th, .table td {
            vertical-align: middle;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }

        .card {
            margin-bottom: 20px;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white !important;
        }

        .pagination .page-link {
            color: #0d6efd;
        }
    </style>
}

@section Scripts {
    <script>
        document.getElementById('pageSizeSelect').addEventListener('change', function() {
            const pageSize = this.value;
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', pageSize);
            url.searchParams.set('pageNumber', 1); // Reset to first page
            window.location.href = url.toString();
        });
    </script>
}