@using FlightManager.Data.Models
@model PaginatedList<FlightManager.Data.Models.Flight>
@{
    ViewData["Title"] = "Flight Management";
    bool isPrivileged = User.IsInRole("Admin") || User.IsInRole("Employee");
}

<div class="container flight-index">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Flight Management</h1>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Add New Flight
            </a>
        }
    </div>

    <!-- Filter Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="fromLocation" class="form-label">From</label>
                    <input type="text" class="form-control" id="fromLocation" name="fromLocation"
                           value="@Context.Request.Query["fromLocation"]" placeholder="Departure location"
                           autocomplete="off">
                </div>
                <div class="col-md-3">
                    <label for="toLocation" class="form-label">To</label>
                    <input type="text" class="form-control" id="toLocation" name="toLocation"
                           value="@Context.Request.Query["toLocation"]" placeholder="Arrival location"
                           autocomplete="off">
                </div>
                <div class="col-md-2">
                    <label for="departureDate" class="form-label">Departure Date</label>
                    <input type="date" class="form-control" id="departureDate" name="departureDate"
                           value="@Context.Request.Query["departureDate"]">
                </div>
                <div class="col-md-2">
                    <label for="arrivalDate" class="form-label">Arrival Date</label>
                    <input type="date" class="form-control" id="arrivalDate" name="arrivalDate"
                           value="@Context.Request.Query["arrivalDate"]">
                </div>
                <input type="hidden" name="pageSize" value="@ViewBag.CurrentPageSize" />
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-search"></i> Filter
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-undo"></i> Reset
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="thead-light">
                        <tr>
                            <th>Route</th>
                            <th>Schedule</th>
                            <th>Aircraft</th>
                            <th>Capacity</th>
                            <th>Availability</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var businessReserved = item.Reservations?.Count(r => r.TicketType == TicketType.Business) ?? 0;
                            var standardReserved = item.Reservations?.Count(r => r.TicketType != TicketType.Business) ?? 0;
                            var businessAvailable = item.BusinessClassCapacity - businessReserved;
                            var standardAvailable = (item.PassengerCapacity - item.BusinessClassCapacity) - standardReserved;
                            var businessPercentage = (businessAvailable * 100) / Math.Max(1, item.BusinessClassCapacity);
                            var standardPercentage = (standardAvailable * 100) / Math.Max(1, (item.PassengerCapacity - item.BusinessClassCapacity));
                            var businessConfirmed = item.Reservations?.Count(r => r.TicketType == TicketType.Business && r.IsConfirmed) ?? 0;
                            var standardConfirmed = item.Reservations?.Count(r => r.TicketType != TicketType.Business && r.IsConfirmed) ?? 0;

                            <tr>
                                <td>
                                    <div class="fw-bold">@item.FromLocation → @item.ToLocation</div>
                                    <small class="text-muted">Flight #@item.AircraftNumber</small>
                                </td>
                                <td>
                                    <div>@item.DepartureTime.ToString("g")</div>
                                    <div>@item.ArrivalTime.ToString("g")</div>
                                </td>
                                <td>
                                    <div>@item.AircraftType</div>
                                    <small class="text-muted">Pilot: @item.PilotName</small>
                                </td>
                                <td>
                                    <div>Total: @item.PassengerCapacity</div>
                                    <div>Business: @item.BusinessClassCapacity</div>
                                </td>
                                <td>
                                    <div class="availability-bars">
                                        <!-- Business Class -->
                                        <div class="d-flex justify-content-between small mb-1">
                                            <span>Business Class</span>
                                            <span class="text-muted"
                                                  data-bs-toggle="tooltip"
                                                  title="Confirmed: @businessConfirmed | Pending: @(businessReserved - businessConfirmed) | Available: @(item.BusinessClassCapacity - businessReserved)">
                                                @if (businessConfirmed == businessReserved)
                                                {
                                                    @($"{businessReserved}/{item.BusinessClassCapacity}")
                                                }
                                                else if (businessReserved == 0)
                                                {
                                                    @($"0/{item.BusinessClassCapacity}")
                                                }
                                                else
                                                {
                                                    @($"[{businessReserved - businessConfirmed}(NC)/{businessReserved}]/{item.BusinessClassCapacity}")
                                                }
                                            </span>
                                        </div>
                                        <div class="progress mb-3" style="height: 8px;">
                                            <div class="progress-bar bg-success"
                                                 style="width:@((businessConfirmed * 100) / item.BusinessClassCapacity)%"
                                                 data-bs-toggle="tooltip"
                                                 title="Confirmed reservations: @businessConfirmed"></div>
                                            <div class="progress-bar bg-warning"
                                                 style="width:@(((businessReserved - businessConfirmed) * 100) / item.BusinessClassCapacity)%"
                                                 data-bs-toggle="tooltip"
                                                 title="Pending confirmation: @(businessReserved - businessConfirmed)"></div>
                                            <div class="progress-bar bg-light"
                                                 style="width:@(((item.BusinessClassCapacity - businessReserved) * 100) / item.BusinessClassCapacity)%"
                                                 data-bs-toggle="tooltip"
                                                 title="Available seats: @(item.BusinessClassCapacity - businessReserved)"></div>
                                        </div>

                                        <!-- Standard Class -->
                                        <div class="d-flex justify-content-between small mb-1">
                                            <span>Standard Class</span>
                                            <span class="text-muted"
                                                  data-bs-toggle="tooltip"
                                                  title="Confirmed: @standardConfirmed | Pending: @(standardReserved - standardConfirmed) | Available: @((item.PassengerCapacity - item.BusinessClassCapacity) - standardReserved)">
                                                @if (standardConfirmed == standardReserved)
                                                {
                                                    @($"{standardReserved}/{(item.PassengerCapacity - item.BusinessClassCapacity)}")
                                                }
                                                else if (standardReserved == 0)
                                                {
                                                    @($"0/{(item.PassengerCapacity - item.BusinessClassCapacity)}")
                                                }
                                                else
                                                {
                                                    @($"[{standardReserved - standardConfirmed}(NC)/{standardReserved}]/{(item.PassengerCapacity - item.BusinessClassCapacity)}")
                                                }
                                            </span>
                                        </div>
                                        <div class="progress" style="height: 8px;">
                                            <div class="progress-bar bg-success"
                                                 style="width:@((standardConfirmed * 100) / (item.PassengerCapacity - item.BusinessClassCapacity))%"
                                                 data-bs-toggle="tooltip"
                                                 title="Confirmed reservations: @standardConfirmed"></div>
                                            <div class="progress-bar bg-warning"
                                                 style="width:@(((standardReserved - standardConfirmed) * 100) / (item.PassengerCapacity - item.BusinessClassCapacity))%"
                                                 data-bs-toggle="tooltip"
                                                 title="Pending confirmation: @(standardReserved - standardConfirmed)"></div>
                                            <div class="progress-bar bg-light"
                                                 style="width:@((((item.PassengerCapacity - item.BusinessClassCapacity) - standardReserved) * 100) / (item.PassengerCapacity - item.BusinessClassCapacity))%"
                                                 data-bs-toggle="tooltip"
                                                 title="Available seats: @((item.PassengerCapacity - item.BusinessClassCapacity) - standardReserved)"></div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-end gap-1">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Details">
                                            <i class="fas fa-eye me-1"></i>View
                                        </a>
                                        @if (isPrivileged)
                                        {
                                            <a asp-action="Passengers" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary" title="Passengers">
                                                <i class="fas fa-users me-1"></i>List
                                            </a>
                                            if (User.IsInRole("Admin"))
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning" title="Edit">
                                                    <i class="fas fa-edit me-1"></i>Edit
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                                    <i class="fas fa-trash-alt me-1"></i>Delete
                                                </a>
                                            }
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination controls -->
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="d-flex align-items-center">
                <span class="me-2">Show:</span>
                <select class="form-select form-select-sm w-auto" id="pageSizeSelect">
                    @foreach (var size in ViewBag.AvailablePageSizes)
                    {
                        <option value="@size" selected="@(size == ViewBag.CurrentPageSize)">@size</option>
                    }
                </select>
                <span class="ms-2">items per page</span>
            </div>
        </div>
        <div class="col-md-6">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-end">
                    <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-pageSize="@ViewBag.CurrentPageSize"
                           asp-route-fromLocation="@Context.Request.Query["fromLocation"]"
                           asp-route-toLocation="@Context.Request.Query["toLocation"]"
                           asp-route-departureDate="@Context.Request.Query["departureDate"]"
                           asp-route-arrivalDate="@Context.Request.Query["arrivalDate"]">
                            Previous
                        </a>
                    </li>

                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@i"
                               asp-route-pageSize="@ViewBag.CurrentPageSize"
                               asp-route-fromLocation="@Context.Request.Query["fromLocation"]"
                               asp-route-toLocation="@Context.Request.Query["toLocation"]"
                               asp-route-departureDate="@Context.Request.Query["departureDate"]"
                               asp-route-arrivalDate="@Context.Request.Query["arrivalDate"]">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-pageSize="@ViewBag.CurrentPageSize"
                           asp-route-fromLocation="@Context.Request.Query["fromLocation"]"
                           asp-route-toLocation="@Context.Request.Query["toLocation"]"
                           asp-route-departureDate="@Context.Request.Query["departureDate"]"
                           asp-route-arrivalDate="@Context.Request.Query["arrivalDate"]">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section StyleLinks {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
}

@section Styles {
    <style>
        .flight-index {
            max-width: 1400px;
        }

        .table th {
            white-space: nowrap;
        }

        .table td {
            vertical-align: middle;
        }

        .availability-bars {
            min-width: 180px;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            white-space: nowrap;
        }

        .progress {
            background-color: #f0f0f0;
        }

        .table td:last-child {
            width: 1%;
            white-space: nowrap;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white !important;
        }

        .pagination .page-link {
            color: #0d6efd;
        }

        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 20px;
            background-color: white;
            border: 1px solid #ddd;
            z-index: 1000 !important;
        }

        .ui-menu-item {
            padding: 5px 10px;
            cursor: pointer;
        }

            .ui-menu-item:hover {
                background-color: #f5f5f5;
            }

        .ui-helper-hidden-accessible {
            display: none;
        }
    </style>
}

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        $(function() {
            $("#fromLocation").autocomplete({
                source: function(request, response) {
                    $.getJSON("/Flights/GetLocationSuggestions", {
                        term: request.term,
                        isDeparture: true
                    }, response);
                },
                minLength: 2,
                delay: 300
            });

            $("#toLocation").autocomplete({
                source: function(request, response) {
                    $.getJSON("/Flights/GetLocationSuggestions", {
                        term: request.term,
                        isDeparture: false
                    }, response);
                },
                minLength: 2,
                delay: 300
            });

            document.getElementById('pageSizeSelect').addEventListener('change', function() {
                const pageSize = this.value;
                const url = new URL(window.location.href);
                url.searchParams.set('pageSize', pageSize);
                url.searchParams.set('pageNumber', 1);
                window.location.href = url.toString();
            });
        });
    </script>
}