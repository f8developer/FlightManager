@using FlightManager.Data.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PaginatedList<Reservation>

@{
    ViewData["Title"] = "Reservation Management";
    bool isPrivileged = User.IsInRole("Admin") || User.IsInRole("Employee");
}

<div class="container reservation-index">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Reservation Management</h1>
            <div>
                <a asp-action="Create" class="btn btn-primary me-2">
                    <i class="fas fa-plus me-1"></i> Create New
                </a>
                <a asp-action="GroupCreate" class="btn btn-success">
                    <i class="fas fa-users me-1"></i> Create Group
                </a>
            </div>
    </div>

    <!-- Filter Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="id" class="form-label">Reservation ID</label>
                    <input type="text" class="form-control" id="id" name="id"
                           value="@ViewBag.SearchId" placeholder="Search by ID">
                </div>
                <div class="col-md-3">
                    <label for="passengerName" class="form-label">Passenger Name</label>
                    <input type="text" class="form-control" id="passengerName" name="passengerName"
                           value="@Context.Request.Query["passengerName"]" placeholder="Search by name">
                </div>
                <div class="col-md-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status">
                        <option value="">All Statuses</option>
                        <option value="confirmed" selected="@(Context.Request.Query["status"] == "confirmed")">Confirmed</option>
                        <option value="pending" selected="@(Context.Request.Query["status"] == "pending")">Pending</option>
                    </select>
                </div>
                <input type="hidden" name="pageSize" value="@ViewBag.CurrentPageSize" />
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-search"></i> Search
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-undo"></i> Reset
                    </a>
                </div>
            </form>
        </div>
    </div>

    @if (!Model.Any() && ViewBag.HasSearched)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> No reservations found matching your criteria.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="thead-light">
                    <tr>
                        <th>Reservation ID</th>
                        <th>Flight Details</th>
                        <th>Passenger</th>
                        <th>Ticket</th>
                        <th>Status</th>
                        <th class="text-end">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>
                                @if (item.Flight != null)
                                {
                                    <div class="fw-bold">@item.Flight.FromLocation → @item.Flight.ToLocation</div>
                                    <div class="small text-muted">
                                        #@item.Flight.AircraftNumber • @item.Flight.DepartureTime.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="small text-muted">
                                        @item.Flight.DepartureTime.ToString("t") → @item.Flight.ArrivalTime.ToString("t")
                                    </div>
                                }
                                else
                                {
                                    <span class="text-danger">Flight not found</span>
                                }
                            </td>
                            <td>
                                @if (item.ReservationUser != null)
                                {
                                    <div>@item.ReservationUser.FirstName @item.ReservationUser.LastName</div>
                                    <div class="small text-muted">
                                        @if (!string.IsNullOrEmpty(item.ReservationUser.Email))
                                        {
                                            <div><i class="fas fa-envelope me-1"></i> @item.ReservationUser.Email</div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.ReservationUser.PhoneNumber))
                                        {
                                            <div><i class="fas fa-phone me-1"></i> @item.ReservationUser.PhoneNumber</div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <span class="text-danger">Passenger not found</span>
                                }
                            </td>
                            <td>
                                    <span class="badge @(item.TicketType == TicketType.Business ? "bg-primary" : "bg-secondary")">
                                        @item.TicketType
                                    </span>
                                <div class="small text-muted mt-1">
                                    @item.Nationality
                                </div>
                            </td>
                            <td>
                                @if (item.IsConfirmed)
                                {
                                    <span class="badge bg-success">
                                            <i class="fas fa-check-circle me-1"></i> Confirmed
                                        </span>
                                    <div class="small text-muted mt-1">
                                        @item.ConfirmedAt?.ToString("g")
                                    </div>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">
                                            <i class="fas fa-clock me-1"></i> Pending
                                        </span>
                                    <div class="small text-muted mt-1">
                                        Created @item.CreatedAt.ToString("g")
                                    </div>
                                }
                            </td>
                            <td>
                                <div class="d-flex justify-content-end gap-1">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    @if (isPrivileged)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (User.IsInRole("Admin") && !item.IsConfirmed)
                                        {
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="fas fa-trash-alt"></i>
                                            </a>
                                        }
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Pagination controls -->
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="d-flex align-items-center">
                <span class="me-2">Show:</span>
                <select class="form-select form-select-sm w-auto" id="pageSizeSelect">
                    @foreach (var size in ViewBag.AvailablePageSizes)
                    {
                        <option value="@size" selected="@(size == ViewBag.CurrentPageSize)">@size</option>
                    }
                </select>
                <span class="ms-2">items per page</span>
            </div>
        </div>
        <div class="col-md-6">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-end">
                    <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-pageSize="@ViewBag.CurrentPageSize"
                           asp-route-id="@ViewBag.SearchId"
                           asp-route-passengerName="@Context.Request.Query["passengerName"]"
                           asp-route-status="@Context.Request.Query["status"]">
                            Previous
                        </a>
                    </li>

                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageNumber="@i"
                               asp-route-pageSize="@ViewBag.CurrentPageSize"
                               asp-route-id="@ViewBag.SearchId"
                               asp-route-passengerName="@Context.Request.Query["passengerName"]"
                               asp-route-status="@Context.Request.Query["status"]">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-pageSize="@ViewBag.CurrentPageSize"
                           asp-route-id="@ViewBag.SearchId"
                           asp-route-passengerName="@Context.Request.Query["passengerName"]"
                           asp-route-status="@Context.Request.Query["status"]">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section StyleLinks {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
}

@section Styles {
    <style>
        .reservation-index {
            max-width: 1600px;
        }

        .table th {
            white-space: nowrap;
            font-weight: 600;
            background-color: #f8f9fa;
        }

        .table td {
            vertical-align: middle;
        }

        .badge {
            font-size: 0.75em;
            padding: 0.5em 0.75em;
            font-weight: 500;
        }

        .btn-sm {
            padding: 0.3rem 0.5rem;
            font-size: 0.75rem;
            border-radius: 0.25rem;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: white !important;
        }

        .pagination .page-link {
            color: #0d6efd;
        }

        .table-responsive {
            overflow-x: auto;
        }

        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid rgba(0, 0, 0, 0.125);
        }

        .alert {
            border-radius: 0.375rem;
        }

        .form-select, .form-control {
            border-radius: 0.375rem;
            border: 1px solid #ced4da;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.02);
        }
    </style>
}

@section Scripts {
    <script>
        document.getElementById('pageSizeSelect').addEventListener('change', function() {
            const pageSize = this.value;
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', pageSize);
            url.searchParams.set('pageNumber', 1);
            window.location.href = url.toString();
        });

        // Initialize tooltips
        $(function () {
            $('[title]').tooltip({
                trigger: 'hover',
                placement: 'top'
            });
        });
    </script>
}