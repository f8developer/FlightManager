<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlightManager</name>
    </assembly>
    <members>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.ErrorMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:FlightManager.Areas.Identity.Pages.Account.LoginModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.LoginModel.InputModel.RememberMe">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.IndexModel.Username">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.IndexModel.StatusMessage">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.IndexModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:FlightManager.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.IndexModel.InputModel.PhoneNumber">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.Index">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalData">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthentication">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.IndexNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.EmailNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.ChangePasswordNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.DownloadPersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.DeletePersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.ExternalLoginsNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.PersonalDataNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.TwoFactorAuthenticationNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:FlightManager.Areas.Identity.Pages.Account.Manage.ManageNavPages.PageNavClass(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String)">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.Input">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.ReturnUrl">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.ExternalLogins">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:FlightManager.Areas.Identity.Pages.Account.RegisterModel.InputModel">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.InputModel.Email">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.InputModel.Password">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:FlightManager.Areas.Identity.Pages.Account.RegisterModel.InputModel.ConfirmPassword">
            <summary>
                This API supports the ASP.NET Core Identity default UI infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:FlightManager.Controllers.AdminController">
            <summary>
            Controller for handling administrative operations including user and role management.
            </summary>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.#ctor(FlightManager.Data.ApplicationDbContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Identity.UserManager{FlightManager.Data.Models.AppUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},FlightManager.OwnerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:FlightManager.Controllers.AdminController"/> class.
            </summary>
            <param name="context">The application database context.</param>
            <param name="env">The web hosting environment.</param>
            <param name="userManager">The user manager service.</param>
            <param name="roleManager">The role manager service.</param>
            <param name="ownerSettings">The owner configuration settings.</param>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Index(System.String,System.String)">
            <summary>
            Displays a list of users with optional filtering by email and role.
            </summary>
            <param name="email">Email filter string.</param>
            <param name="role">Role filter string.</param>
            <returns>The view containing filtered users.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Roles">
            <summary>
            Displays a list of all roles with their user counts.
            </summary>
            <returns>The view containing role information.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Details(System.String)">
            <summary>
            Displays details for a specific user.
            </summary>
            <param name="id">The user ID.</param>
            <returns>The user details view or NotFound if user doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Create">
            <summary>
            Displays the user creation form.
            </summary>
            <returns>The user creation view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Create(FlightManager.Data.Models.AppUser,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Handles user creation form submission.
            </summary>
            <param name="appUser">The user data.</param>
            <param name="password">The user password.</param>
            <param name="confirmPassword">The password confirmation.</param>
            <param name="selectedRoles">List of roles to assign to the user.</param>
            <returns>Redirects to user list on success or returns creation view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Edit(System.String)">
            <summary>
            Displays the user edit form.
            </summary>
            <param name="id">The user ID to edit.</param>
            <returns>The edit view or NotFound if user doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Edit(System.String,FlightManager.Data.Models.AppUser,System.Collections.Generic.List{System.String})">
            <summary>
            Handles user edit form submission.
            </summary>
            <param name="id">The user ID being edited.</param>
            <param name="user">The updated user data.</param>
            <param name="selectedRoles">List of roles to assign to the user.</param>
            <returns>Redirects to user list on success or returns edit view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.Delete(System.String)">
            <summary>
            Displays the user deletion confirmation form.
            </summary>
            <param name="id">The user ID to delete.</param>
            <returns>The deletion confirmation view or NotFound if user doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.DeleteConfirmed(System.String)">
            <summary>
            Handles user deletion confirmation.
            </summary>
            <param name="id">The user ID to delete.</param>
            <returns>Redirects to user list or returns error view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.CreateRole">
            <summary>
            Displays the role creation form.
            </summary>
            <returns>The role creation view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.CreateRole(Microsoft.AspNetCore.Identity.IdentityRole)">
            <summary>
            Handles role creation form submission.
            </summary>
            <param name="role">The role data to create.</param>
            <returns>Redirects to role list on success or returns creation view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.DeleteRole(System.String)">
            <summary>
            Displays the role deletion confirmation form.
            </summary>
            <param name="id">The role ID to delete.</param>
            <returns>The deletion confirmation view or NotFound if role doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.AdminController.DeleteRoleConfirmed(System.String)">
            <summary>
            Handles role deletion confirmation.
            </summary>
            <param name="id">The role ID to delete.</param>
            <returns>Redirects to role list or returns error view.</returns>
        </member>
        <member name="T:FlightManager.Controllers.FlightsController">
            <summary>
            Controller for managing flight operations.
            </summary>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.#ctor(FlightManager.Data.ApplicationDbContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:FlightManager.Controllers.FlightsController"/> class.
            </summary>
            <param name="context">The application database context.</param>
            <param name="env">The web hosting environment.</param>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Index">
            <summary>
            Displays a list of all flights.
            </summary>
            <returns>The flights list view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Details(System.Nullable{System.Int32})">
            <summary>
            Displays details for a specific flight.
            </summary>
            <param name="id">The flight ID.</param>
            <returns>The flight details view or NotFound if flight doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Create">
            <summary>
            Displays the flight creation form.
            </summary>
            <returns>The flight creation view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Create(FlightManager.Data.Models.Flight)">
            <summary>
            Handles flight creation form submission.
            </summary>
            <param name="flight">The flight data to create.</param>
            <returns>Redirects to flight list on success or returns creation view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Edit(System.Nullable{System.Int32})">
            <summary>
            Displays the flight edit form.
            </summary>
            <param name="id">The flight ID to edit.</param>
            <returns>The edit view or NotFound if flight doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Edit(System.Int32,FlightManager.Data.Models.Flight)">
            <summary>
            Handles flight edit form submission.
            </summary>
            <param name="id">The flight ID being edited.</param>
            <param name="flight">The updated flight data.</param>
            <returns>Redirects to flight list on success or returns edit view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Delete(System.Nullable{System.Int32})">
            <summary>
            Displays the flight deletion confirmation form.
            </summary>
            <param name="id">The flight ID to delete.</param>
            <returns>The deletion confirmation view or NotFound if flight doesn't exist.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.DeleteConfirmed(System.Int32)">
            <summary>
            Handles flight deletion confirmation.
            </summary>
            <param name="id">The flight ID to delete.</param>
            <returns>Redirects to flight list.</returns>
        </member>
        <member name="M:FlightManager.Controllers.FlightsController.Passengers(System.Int32)">
            <summary>
            Displays a list of passengers for a specific flight.
            </summary>
            <param name="id">The flight ID.</param>
            <returns>The passengers list view or NotFound if flight doesn't exist.</returns>
        </member>
        <member name="T:FlightManager.Controllers.HomeController">
            <summary>
            Controller for handling general application views.
            </summary>
        </member>
        <member name="M:FlightManager.Controllers.HomeController.#ctor(Microsoft.Extensions.Logging.ILogger{FlightManager.Controllers.HomeController},FlightManager.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FlightManager.Controllers.HomeController"/> class.
            </summary>
            <param name="logger">The logger service.</param>
            <param name="context">The database context.</param>
        </member>
        <member name="M:FlightManager.Controllers.HomeController.Index">
            <summary>
            Displays the home page with flight statistics.
            </summary>
            <returns>The home page view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.HomeController.Privacy">
            <summary>
            Displays the privacy policy page.
            </summary>
            <returns>The privacy policy view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.HomeController.Error">
            <summary>
            Displays the error page.
            </summary>
            <returns>The error view.</returns>
        </member>
        <member name="T:FlightManager.Controllers.HomeViewModel">
            <summary>
            ViewModel for the home page statistics.
            </summary>
        </member>
        <member name="T:FlightManager.Controllers.ReservationsController">
            <summary>
            Controller for managing flight reservations.
            </summary>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.#ctor(FlightManager.Data.ApplicationDbContext,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Identity.UserManager{FlightManager.Data.Models.AppUser},FlightManager.EmailService.BrevoEmailService)">
            <summary>
            Initializes a new instance of the <see cref="T:FlightManager.Controllers.ReservationsController"/> class.
            </summary>
            <param name="context">The application database context.</param>
            <param name="env">The web hosting environment.</param>
            <param name="userManager">The user manager service.</param>
            <param name="emailService">The email service.</param>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Index(System.String,System.String,System.String,System.String)">
            <summary>
            Displays a list of reservations with optional filtering.
            </summary>
            <param name="id">User ID filter.</param>
            <param name="username">Username filter.</param>
            <param name="firstName">First name filter.</param>
            <param name="lastName">Last name filter.</param>
            <returns>The reservations list view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Details(System.Nullable{System.Int32})">
            <summary>
            Displays details for a specific reservation.
            </summary>
            <param name="id">The reservation ID.</param>
            <returns>The reservation details view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Create(System.String)">
            <summary>
            Displays the reservation creation form.
            </summary>
            <returns>The reservation creation view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Create(FlightManager.Data.Models.Reservation,System.String)">
            <summary>
            Handles reservation creation form submission.
            </summary>
            <param name="reservation">The reservation data to create.</param>
            <returns>Redirects to details view on success or returns creation view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Edit(System.Nullable{System.Int32})">
            <summary>
            Displays the reservation edit form.
            </summary>
            <param name="id">The reservation ID to edit.</param>
            <returns>The edit view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Edit(System.Int32,FlightManager.Data.Models.Reservation)">
            <summary>
            Handles reservation edit form submission.
            </summary>
            <param name="id">The reservation ID being edited.</param>
            <param name="reservation">The updated reservation data.</param>
            <returns>Redirects to index view on success or returns edit view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.Delete(System.Nullable{System.Int32})">
            <summary>
            Displays the reservation deletion confirmation form.
            </summary>
            <param name="id">The reservation ID to delete.</param>
            <returns>The deletion confirmation view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.DeleteConfirmed(System.Int32,System.Boolean)">
            <summary>
            Handles reservation deletion confirmation.
            </summary>
            <param name="id">The reservation ID to delete.</param>
            <param name="confirmDeleteUser">Whether to confirm deletion of associated user.</param>
            <returns>Redirects to index view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.ConfirmDeleteUser(System.Int32)">
            <summary>
            Displays the user deletion confirmation form.
            </summary>
            <param name="userId">The user ID to delete.</param>
            <returns>The confirmation view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.ConfirmDeleteUserConfirmed(System.Int32)">
            <summary>
            Handles user deletion confirmation.
            </summary>
            <param name="userId">The user ID to delete.</param>
            <returns>Redirects to index view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationsController.CheckReservation(System.String,System.Int32)">
            <summary>
            Checks if a reservation exists for the given EGN and flight ID.
            </summary>
            <param name="egn">The EGN to check.</param>
            <param name="flightId">The flight ID to check.</param>
            <returns>JSON response indicating if reservation exists.</returns>
        </member>
        <member name="T:FlightManager.Controllers.ReservationUsersController">
            <summary>
            Controller for managing reservation users.
            </summary>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.#ctor(FlightManager.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FlightManager.Controllers.ReservationUsersController"/> class.
            </summary>
            <param name="context">The application database context.</param>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Index">
            <summary>
            Displays a list of reservation users.
            </summary>
            <returns>The users list view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Details(System.Nullable{System.Int32})">
            <summary>
            Displays details for a specific reservation user.
            </summary>
            <param name="id">The user ID.</param>
            <returns>The user details view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Create">
            <summary>
            Displays the reservation user creation form.
            </summary>
            <returns>The user creation view.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Create(FlightManager.Data.Models.ReservationUser)">
            <summary>
            Handles reservation user creation form submission.
            </summary>
            <param name="reservationUser">The user data to create.</param>
            <returns>Redirects to index view on success or returns creation view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Edit(System.Nullable{System.Int32})">
            <summary>
            Displays the reservation user edit form.
            </summary>
            <param name="id">The user ID to edit.</param>
            <returns>The edit view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Edit(System.Int32,FlightManager.Data.Models.ReservationUser)">
            <summary>
            Handles reservation user edit form submission.
            </summary>
            <param name="id">The user ID being edited.</param>
            <param name="reservationUser">The updated user data.</param>
            <returns>Redirects to index view on success or returns edit view with errors.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.Delete(System.Nullable{System.Int32})">
            <summary>
            Displays the reservation user deletion confirmation form.
            </summary>
            <param name="id">The user ID to delete.</param>
            <returns>The deletion confirmation view or NotFound.</returns>
        </member>
        <member name="M:FlightManager.Controllers.ReservationUsersController.DeleteConfirmed(System.Int32)">
            <summary>
            Handles reservation user deletion confirmation.
            </summary>
            <param name="id">The user ID to delete.</param>
            <returns>Redirects to index view.</returns>
        </member>
        <member name="T:FlightManager.Extensions.AppStart">
            <summary>
            Provides application startup initialization logic.
            </summary>
        </member>
        <member name="M:FlightManager.Extensions.AppStart.InitializeAsync(Microsoft.AspNetCore.Builder.WebApplication,FlightManager.OwnerSettings)">
            <summary>
            Initializes the application by seeding required roles and owner user asynchronously.
            </summary>
            <param name="app">The WebApplication instance to initialize.</param>
            <param name="ownerSettings">Configuration settings for the owner user.</param>
            <returns>A Task representing the asynchronous operation.</returns>
        </member>
        <member name="T:FlightManager.Extensions.AppStartLogic.SeedRolesAndOwner">
            <summary>
            Contains logic for seeding initial roles and the owner user during application startup.
            </summary>
        </member>
        <member name="M:FlightManager.Extensions.AppStartLogic.SeedRolesAndOwner.SeedRolesAndOwnerAsync(Microsoft.Extensions.DependencyInjection.IServiceScope,FlightManager.OwnerSettings)">
            <summary>
            Seeds the database with required roles and ensures the owner user exists with the latest password.
            </summary>
            <param name="scope">The IServiceScope containing required services.</param>
            <param name="ownerSettings">Configuration settings for the owner user.</param>
            <returns>A Task representing the asynchronous operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when owner password is not configured.</exception>
            <exception cref="T:System.Exception">Thrown when owner user creation or update fails.</exception>
        </member>
        <member name="T:FlightManager.Program">
            <summary>
            The main entry point for the FlightManager application.
            </summary>
        </member>
        <member name="M:FlightManager.Program.Main(System.String[])">
            <summary>
            The entry point of the application.
            </summary>
            <param name="args">Command-line arguments passed to the application.</param>
            <returns>A Task representing the asynchronous operation.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the default connection string is not found.</exception>
        </member>
        <member name="T:FlightManager.OwnerSettings">
            <summary>
            Represents configuration settings for the owner user.
            </summary>
        </member>
        <member name="P:FlightManager.OwnerSettings.OwnerEmail">
            <summary>
            Gets or sets the email address for the owner user.
            </summary>
        </member>
        <member name="P:FlightManager.OwnerSettings.OwnerPassword">
            <summary>
            Gets or sets the password for the owner user.
            </summary>
        </member>
    </members>
</doc>
