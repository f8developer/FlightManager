<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlightManager.Test</name>
    </assembly>
    <members>
        <member name="T:FlightManager.Test.ContextTests.ApplicationDbContextTests">
            <summary>
            Contains unit tests for the ApplicationDbContext class.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.Setup">
            <summary>
            Sets up the test environment before each test method is executed.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.TestRemoveOrphanedReservationUser">
            <summary>
            Tests that orphaned ReservationUsers are automatically removed when their last reservation is deleted.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.TestSaveChanges_NoOrphanedReservationUser">
            <summary>
            Tests that non-orphaned ReservationUsers are not removed when saving changes.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.TestReservationUserAppUserRelationship">
            <summary>
            Tests the relationship between ReservationUser and AppUser entities.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.TestEnumStorage">
            <summary>
            Tests that TicketType enum values are correctly stored and retrieved from the database.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ContextTests.ApplicationDbContextTests.TearDown">
            <summary>
            Cleans up the test environment after each test method is executed.
            </summary>
        </member>
        <member name="T:FlightManager.Test.ModelTests.FlightTests">
            <summary>
            Contains unit tests for the Flight model validation.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.FlightTests.FlightValidation_ShouldFail_WhenArrivalBeforeDeparture">
            <summary>
            Tests that flight validation fails when arrival time is before departure time.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.FlightTests.FlightValidation_ShouldFail_WhenBusinessClassExceedsTotalCapacity">
            <summary>
            Tests that flight validation fails when business class capacity exceeds total passenger capacity.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.FlightTests.FlightValidation_ShouldPass_WithValidData">
            <summary>
            Tests that flight validation passes with valid data.
            </summary>
        </member>
        <member name="T:FlightManager.Test.ModelTests.ReservationTests">
            <summary>
            Contains unit tests for the Reservation model validation and database operations.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationTests.Setup">
            <summary>
            Sets up the test environment before each test method is executed.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationTests.ValidateUniqueReservation_ShouldPass_WhenFirstReservationIsCreated">
            <summary>
            Tests that reservation validation passes when creating the first reservation.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationTests.ValidateUniqueReservation_ShouldFail_WhenDuplicateReservationExists">
            <summary>
            Tests that reservation validation fails when a duplicate reservation exists.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationTests.ValidateUniqueReservation_ShouldFail_WhenDatabaseContextIsUnavailable">
            <summary>
            Tests that reservation validation fails when the database context is unavailable.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationTests.TearDown">
            <summary>
            Cleans up the test environment after each test method is executed.
            </summary>
        </member>
        <member name="T:FlightManager.Test.ModelTests.ReservationTests.ServiceProviderStub">
            <summary>
            Service provider stub for providing the database context during validation.
            </summary>
        </member>
        <member name="T:FlightManager.Test.ModelTests.ReservationUserTests">
            <summary>
            Contains unit tests for the ReservationUser model validation.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationUserTests.CreateValidUser">
            <summary>
            Creates a valid ReservationUser instance for testing.
            </summary>
            <returns>A valid ReservationUser instance</returns>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationUserTests.ValidateModel(System.Object)">
            <summary>
            Validates a model object and returns the validation results.
            </summary>
            <param name="model">The model to validate</param>
            <returns>List of validation results</returns>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationUserTests.ReservationUser_ValidData_ShouldPassValidation">
            <summary>
            Tests that a valid ReservationUser passes validation.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationUserTests.ReservationUser_EGN_InvalidFormat_ShouldFailValidation">
            <summary>
            Tests that validation fails when EGN has invalid format.
            </summary>
        </member>
        <member name="M:FlightManager.Test.ModelTests.ReservationUserTests.ReservationUser_PhoneNumber_InvalidFormat_ShouldFailValidation">
            <summary>
            Tests that validation fails when phone number has invalid format.
            </summary>
        </member>
    </members>
</doc>
